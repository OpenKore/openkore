navi_link_krpri
	Navi_Link = { "FROM_MAP", GID, TYPE, SPRITE_ID, "NAME", "UNIQUE_NAME", FROM_X, FROM_Y, "TO_MAP", TO_X, TO_Y }
-- TYPE:
-- 200 = warp
-- 201 = npc script (free?)
-- 202 = Kafra Dungeon Warp,
-- 203 = Cool Event Dungeon Warp
-- 204 Kafra/Cool Event/Alberta warp,
-- 205 = airport  (Currently we only support warps)

navi_linkdistance_krpri
	Navi_Distance = { "MAP", TOTAL_DISTANCES, { GID, { "E??", GID, DISTANCE } }}

navi_map_krpri
	Navi_Map = {"MAP", "MAP_NAME", TYPE, WIDTH, HEIGTH }
-- TYPE:	
// 5001 = normal, 5002 = airport/airship, 5003 = indoor maps
// 5005 = 5003 + monsters??? i really have no clue
//        maybe it's maps that you must leave to reach parts of it
//        for example, ptr_fild04?
	
navi_mob_krpri
	Navi_Mob = { "MAP", IDX?, TYPE, AMOUNT+MOBID, NAME, SPRITE, LVL, MOBINFO  }
TYPE
301 = MVP
300 = MOB

AMOUNT+MOBID
(amount << 16 | (mobinfo->vd.class_ & 0xFFFF))

MOBINFO
(((mobinfo->status.ele_lv * 20 + mobinfo->status.def_ele) << 16) | (mobinfo->status.size << 8) | mobinfo->status.race);

navi_npc_krpri
Navi_Npc = { "MAP", NAV_ID, TYPE, CLASS_(ID?), NAME, POS_X, POS_Y }
	{ "abyss_03", 27821, 101, 10443, "여행자의 비석", "abyss", 108, 97 },
TYPE
101 = COMMON
102 = SHOP

navi_npcdistance_krpri
Navi_NpcDistance = { "MAP", TOTAL_DISTANCES, { GID, { "MAP", GID, DISTANCE } }}


os << "\t\t\t{ \"" << mdest->name << "\", " << warp->id << ", " << std::to_string(wpd.path_len) << "}, -- (" << msrc->name << ", " << warp->pos.x << ", " << warp->pos.y << ")\n";



